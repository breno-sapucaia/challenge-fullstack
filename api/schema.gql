# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Author implements BaseSchema {
  _id: ID
  createAt: DateTime
  firstName: String!
  fullName: String!
  lastName: String!
  updatedAt: DateTime
}

interface BaseSchema {
  _id: ID
  createAt: DateTime
  updatedAt: DateTime
}

type Book implements BaseSchema {
  _id: ID
  author: Author
  createAt: DateTime
  description: String!
  imageUri: String!
  subTitle: String
  title: String!
  updatedAt: DateTime
}

"""Use this input to create a new book"""
input CreateAuthorInput {
  firstName: String!
  lastName: String!
}

"""Use this input to create a new book"""
input CreateBookInput {
  author: CreateAuthorInput!
  description: String!
  imageUri: String
  subTitle: String
  title: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Mutation {
  createBook(createBookInput: CreateBookInput!): Book!
  deleteBook(_id: String!): Boolean!
  updateBook(_id: String!, updateBookInput: UpdateBookInput!): Book!
}

type Query {
  countBooks: Int!
  getBook(_id: String!): Book!
  getBooks: [Book!]
  getByName(page: Float, term: String!): [Book!]!
}

"""Use this input to create a new book"""
input UpdateAuthorInput {
  firstName: String
  lastName: String
}

"""Use this input to update the book"""
input UpdateBookInput {
  author: UpdateAuthorInput
  description: String
  imageUri: String
  subTitle: String
  title: String
}
