# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Author implements BaseSchema {
  _id: ID!
  createAt: DateTime!
  firstName: String!
  fullName: String!
  lastName: String!
  updatedAt: DateTime!
}

interface BaseSchema {
  _id: ID!
  createAt: DateTime!
  updatedAt: DateTime!
}

type Book implements BaseSchema {
  _id: ID!
  authors: [Author!]
  createAt: DateTime!
  description: String!
  name: String!
  updatedAt: DateTime!
}

"""Use this input to create an author"""
input CreateAuthorInput {
  firstName: String!
  lastName: String!
}

"""Use this input to create a new book"""
input CreateBookInput {
  authors: [CreateAuthorInput!]!
  description: String!
  name: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Mutation {
  createBook(createBookInput: CreateBookInput!): Book!
  deleteBook(_id: String!): Boolean!
  updateBook(_id: String!, updateBookInput: UpdateBookInput!): Boolean!
}

type Query {
  getBook(_id: String!): Book!
  getBooks: [Book!]
  getByName(name: String!): [Book!]!
}

"""Use this input to create an author"""
input UpdateAuthorInput {
  firstName: String!
  lastName: String!
}

"""Use this input to update the book"""
input UpdateBookInput {
  _id: ID!
  authors: [UpdateAuthorInput!]
  description: String
  firstName: String
  lastName: String
}
